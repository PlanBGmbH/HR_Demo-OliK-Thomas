# services/image_description_service.py

from utils.config_loader import get_provider
from utils.file_utils import upload_file_to_azure

class ImageDescriptionService:
    def __init__(self):
        provider = get_provider('image_description_provider')
        if provider == "openai":
            from wrappers.openai_image_description_wrapper import OpenAIImageDescriptionWrapper
            self.service = OpenAIImageDescriptionWrapper()
        elif provider == "azure":
            from wrappers.azure_image_description_wrapper import AzureImageDescriptionWrapper
            self.service = AzureImageDescriptionWrapper()
        else:
            raise ValueError(f"Unsupported provider: {provider}")

    def describe_image(self, image_path,celebs_info):
        """
        Uploads the image to Azure Blob Storage, generates a SAS URL, 
        and passes the SAS URL to the appropriate provider (OpenAI or Azure) for description.
        
        :param image_path: Path to the image file to be uploaded and described
        :return: Description of the image generated by the provider (OpenAI/Azure)
        """
        # Upload the image to Azure and get the SAS URL
        # sas_url = upload_file_to_azure(image_path, image_path.split('/')[-1])  # Use filename as blob name

        # Pass the SAS URL to the provider's describe_image method
        return self.service.describe_image(image_path,celebs_info)
